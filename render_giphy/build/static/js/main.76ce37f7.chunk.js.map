{"version":3,"sources":["components/Form.js","components/Gifs.jsx","components/MakeApiCall.jsx","App.js","index.js"],"names":["Form","props","useState","gifTitle","setGifTitle","onSubmit","e","preventDefault","handleEnter","console","log","htmlFor","id","type","value","placeholder","onChange","title","target","Gifs","className","src","gifData","alt","MakeApiCall","onClick","handleSubmit","handleCount","App","setGifData","gifEnter","setGifEnter","gifSearch","setGifSearch","count","setCount","useEffect","makeApiCall","a","someUrl","fetch","res","json","data","random","Math","floor","images","downsized_large","url","enter","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"wPAkCeA,MAhCf,SAAcC,GACZ,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAcA,OACE,mCACE,uBAAMC,SARU,SAACC,GACnBA,EAAEC,iBACFN,EAAMO,YAAYL,GAClBM,QAAQC,IAAIP,EAAU,6BAKpB,UACE,uBAAOQ,QAAQ,WAAf,uBACA,uBACEC,GAAG,WACHC,KAAK,OACLC,MAAOX,EACPY,YAAY,oBACZC,SArBa,SAACV,GACpBG,QAAQC,IAAI,aACZ,IAAMO,EAAQX,EAAEY,OAAOJ,MACvBV,EAAYa,MAoBR,uBAAOJ,KAAK,SAASC,MAAM,iBChBpBK,MATf,SAAclB,GAEZ,OACA,qBAAKmB,UAAU,UAAf,SACE,qBAAKR,GAAG,QAAQS,IAAKpB,EAAMqB,QAASC,IAAI,QCL7B,SAASC,EAAYvB,GAahC,OACI,wBAAQwB,QAZO,SAACnB,GAGhBA,EAAEC,iBACFN,EAAMyB,eACNzB,EAAM0B,cACNlB,QAAQC,IAAI,yBAMZ,qCCgDOkB,MAtDf,WACE,MAA8B1B,mBAAS,IAAvC,mBAAOoB,EAAP,KAAgBO,EAAhB,KACA,EAAgC3B,mBAAS,UAAzC,mBAAO4B,EAAP,KAAiBC,EAAjB,KACA,EAAkC7B,mBAAS,UAA3C,mBAAO8B,EAAP,KAAkBC,EAAlB,KACA,EAA0B/B,mBAAS,GAAnC,mBAAOgC,EAAP,KAAcC,EAAd,KAwCA,OAnBAC,qBAAU,WAER,IAAMC,EAAW,uCAAG,kCAAAC,EAAA,6DACdC,EADc,uDAtBP,mCAsBO,cACsDP,GADtD,SAEJQ,MAAMD,GAFF,cAEdE,EAFc,gBAGHA,EAAIC,OAHD,OAGdC,EAHc,OAIpBlC,QAAQC,IAAIiC,EAAKA,MACjBlC,QAAQC,IAAIsB,GAERY,EAASC,KAAKC,MAAsB,GAAhBD,KAAKD,UAE7Bf,EAAWc,EAAKA,KAAKC,GAAQG,OAAOC,gBAAgBC,KAThC,4CAAH,qDAYjBZ,MAEC,CAACH,IAIF,sBAAKd,UAAU,MAAf,UACI,uCACF,cAAC,EAAD,CAAMZ,YAhCU,SAAC0C,GAChBA,GACHnB,EAAYmB,GACZzC,QAAQC,IAAIoB,MA8BV,cAACN,EAAD,CAAaE,aAzCI,WACnBjB,QAAQC,IAAI,qBAAsBsB,GAClCC,EAAaH,GACbrB,QAAQC,IAAI,qBAAsBsB,IAsCSL,YA3BzB,WAClBQ,EAASD,EAAM,MA2Bb,cAAC,EAAD,CAAMZ,QAASA,QCtDf6B,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFL,K","file":"static/js/main.76ce37f7.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction Form(props) {\n  const [gifTitle, setGifTitle] = useState('');\n\n  const handleChange = (e) => {\n    console.log('typing...');\n    const title = e.target.value;\n    setGifTitle(title);\n  };\n\n  const handleEnter = (e) => {\n    e.preventDefault();\n    props.handleEnter(gifTitle);\n    console.log(gifTitle, \"is store to gifEnter now\");\n  }\n\n  return (\n    <>\n      <form onSubmit={handleEnter}>\n        <label htmlFor=\"gifTitle\">Gif Name:</label>\n        <input\n          id=\"gifTitle\"\n          type=\"text\"\n          value={gifTitle}\n          placeholder=\"Enter anything...\"\n          onChange={handleChange}\n        />\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    </>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\n\n\nfunction Gifs(props) {\n    \n  return (\n  <div className=\"gif-row\">\n    <img id=\"image\" src={props.gifData} alt=\"\" />\n  </div>\n  )\n}\n\nexport default Gifs;\n","\n\nexport default function MakeApiCall(props) {\n\n    const handleClick =(e) => {\n\n        \n        e.preventDefault();\n        props.handleSubmit()\n        props.handleCount();\n        console.log(\"Now make API call...\")\n\n        \n    }\n\n    return (\n        <button onClick={handleClick}>Press to generate GIFs!</button>\n    )\n}","import React, { useState, useEffect, useRef } from 'react';\nimport './styles.css';\nimport Form from './components/Form';\nimport Gifs from './components/Gifs';\nimport MakeApiCall from './components/MakeApiCall';\n\n\n\n\n\nfunction App() {\n  const [gifData, setGifData] = useState('');\n  const [gifEnter, setGifEnter] = useState('random');\n  const [gifSearch, setGifSearch] = useState('random')\n  const [count, setCount] = useState(0);\n  const APIkey = 'vYGhYytFGToHyvrH9hpvJYTC2C5Mqmlg';\n\n  const handleSubmit = () => {\n    console.log(\"gifSearch is now: \", gifSearch)\n    setGifSearch(gifEnter);\n    console.log(\"gifSearch is now: \", gifSearch)\n\n  };\n\n\n  const handleEnter = (enter) => {\n    if(enter)\n    setGifEnter(enter);\n    console.log(gifEnter)\n  }\n\n  const handleCount = () => {\n    setCount(count+1);\n  }\n\n  useEffect(()=>{\n  \n    const makeApiCall = async () => {\n    const someUrl=`https://api.giphy.com/v1/gifs/search?api_key=${APIkey}&q=${gifSearch}`;\n    const res=await fetch(someUrl)\n    const data=await res.json()\n    console.log(data.data);\n    console.log(gifSearch);\n  \n    let random = Math.floor(Math.random() * 10)\n  \n    setGifData(data.data[random].images.downsized_large.url)\n    };\n\n    makeApiCall();\n    \n  }, [count])\n\n\n  return (\n    <div className=\"App\">\n        <h1>Giphy</h1>\n      <Form handleEnter={handleEnter} />  \n      <MakeApiCall handleSubmit={handleSubmit} handleCount={handleCount} />\n      <Gifs gifData={gifData} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}